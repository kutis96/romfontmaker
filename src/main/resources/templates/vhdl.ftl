-- Generated by Spacecat's romfontmaker
-- Last updated on ${date?string("yyyy-MM-dd HH:mm:ss")}
-- This template is still unfinished, and does not support widths other than 8 for now.
<#assign architecture = "impl">
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity ${romName} is
    port (
        clk     : in std_logic;
        address : in std_logic_vector(${bitCount(font.orderedGlyphKeys?size) - 1} downto 0);
        data    : out std_logic_vector(${8 - 1} downto 0)
    );
end entity;

architecture ${architecture} of ${romName} is
    type rom_array is array (natural range <>) of std_logic_vector(${8 - 1} downto 0);

    constant rom_data : rom_array := (<#list font.orderedGlyphKeys as key>
    <#assign glyph = font.fontGlyphs[key]>
        <#list glyph.getByteColumns("LSB") as byte>"${radixFormatter(byte, 2, 8)}"<#sep>,</#sep></#list><#sep>,</#sep> -- ${key}</#list>
    );
begin

sync: process(clk) is
    begin
        if (rising_edge(clk)) then
            data <= rom_data(to_integer(unsigned(address)));
        end if;
    end process;
end architecture ${architecture};